// <auto-generated />
using System;
using AvaloniaApplication1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AvaloniaApplication1.Migrations
{
    [DbContext(typeof(Gr692BvvContext))]
    partial class Gr692BvvContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AvaloniaApplication1.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clientId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<string>("Fio")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fio");

                    b.Property<string>("Passport")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("passport");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("phone");

                    b.HasKey("ClientId")
                        .HasName("clients_pkey");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ProductId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("brand");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("color");

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("ManufCountry")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("manufCountry");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("model");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.HasKey("ProductId")
                        .HasName("products_pkey");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("purchaseId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PurchaseId"));

                    b.Property<int?>("ClientIdFk")
                        .HasColumnType("integer")
                        .HasColumnName("clientIdFk");

                    b.Property<DateOnly?>("DatePurchase")
                        .HasColumnType("date")
                        .HasColumnName("datePurchase");

                    b.Property<int?>("ProductIdFk")
                        .HasColumnType("integer")
                        .HasColumnName("productIdFk");

                    b.Property<int?>("TypePurchaseIdFk")
                        .HasMaxLength(255)
                        .HasColumnType("integer")
                        .HasColumnName("typePurchaseIdFk");

                    b.Property<int?>("TypesPurchaseTypeId")
                        .HasColumnType("integer");

                    b.HasKey("PurchaseId")
                        .HasName("purchase_pkey");

                    b.HasIndex("ClientIdFk");

                    b.HasIndex("ProductIdFk");

                    b.HasIndex("TypesPurchaseTypeId");

                    b.ToTable("purchases", (string)null);
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.TypesPurchase", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("purchaseId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeId"));

                    b.Property<int?>("CashTransfer")
                        .HasColumnType("integer")
                        .HasColumnName("productIdFk");

                    b.Property<int?>("CreditNow")
                        .HasColumnType("integer")
                        .HasColumnName("clientIdFk");

                    b.HasKey("TypeId")
                        .HasName("typePurchase_pkey");

                    b.ToTable("typePurchases", (string)null);
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.Purchase", b =>
                {
                    b.HasOne("AvaloniaApplication1.Models.Client", "Client")
                        .WithMany("Purchases")
                        .HasForeignKey("ClientIdFk")
                        .HasConstraintName("payments_clientIdFk_fkey");

                    b.HasOne("AvaloniaApplication1.Models.Product", "Product")
                        .WithMany("Purchases")
                        .HasForeignKey("ProductIdFk")
                        .HasConstraintName("purchases_productIdFk_fkey");

                    b.HasOne("AvaloniaApplication1.Models.TypesPurchase", "TypesPurchase")
                        .WithMany()
                        .HasForeignKey("TypesPurchaseTypeId");

                    b.Navigation("Client");

                    b.Navigation("Product");

                    b.Navigation("TypesPurchase");
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.Client", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("AvaloniaApplication1.Models.Product", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
